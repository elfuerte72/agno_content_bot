#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤
"""

import asyncio
import os
from dotenv import load_dotenv
from post_editor import PostEditor

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_post_editor():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostEditor –∫–ª–∞—Å—Å–∞"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    editor = PostEditor(api_key=api_key)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    original_post = """
üî• **–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π**

üìä **–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:**
–°–µ–≥–æ–¥–Ω—è –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π, –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.

üì∞ **–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:**
‚Ä¢ OpenAI –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å GPT-5
‚Ä¢ Bitcoin –¥–æ—Å—Ç–∏–≥ –Ω–æ–≤–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞
‚Ä¢ Apple –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª–∞ –Ω–æ–≤—ã–π iPhone
‚Ä¢ Tesla –∑–∞–ø—É—Å—Ç–∏–ª–∞ –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è

üîç **–ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã:**
–†—ã–Ω–æ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Å—Ñ–µ—Ä–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

#—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ #–Ω–æ–≤–æ—Å—Ç–∏ #–ò–ò #–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
"""

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤\n")
    print("üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç:")
    print(original_post)
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 1: –°–¥–µ–ª–∞—Ç—å –∫–æ—Ä–æ—á–µ
    print("üéØ –¢–µ—Å—Ç 1: –°–¥–µ–ª–∞—Ç—å –∫–æ—Ä–æ—á–µ")
    try:
        shorter_post = await editor.edit_post(
            original_post, 
            "–°–¥–µ–ª–∞–π –ø–æ—Å—Ç –∫–æ—Ä–æ—á–µ, —É–±–µ—Ä–∏ –ª–∏—à–Ω–∏–µ –¥–µ—Ç–∞–ª–∏, –æ—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ"
        )
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(shorter_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª–µ–π
    print("üìù –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª–µ–π")
    try:
        detailed_post = await editor.edit_post(
            original_post, 
            "–î–æ–±–∞–≤—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π, —Ä–∞—Å—à–∏—Ä—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
        )
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(detailed_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 3: –ë–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ
    print("üî• –¢–µ—Å—Ç 3: –ë–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ")
    try:
        engaging_post = await editor.edit_post(
            original_post, 
            "–°–¥–µ–ª–∞–π –ø–æ—Å—Ç –±–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, —É–ª—É—á—à–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫"
        )
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(engaging_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–∏—Ç—å —ç–º–æ–¥–∑–∏
    print("üìä –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–∏—Ç—å —ç–º–æ–¥–∑–∏")
    try:
        emoji_post = await editor.edit_post(
            original_post, 
            "–î–æ–±–∞–≤—å –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è"
        )
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(emoji_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print("‚úçÔ∏è –¢–µ—Å—Ç 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
    try:
        custom_post = await editor.edit_post(
            original_post, 
            "–£–±–µ—Ä–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Tesla –∏ Apple, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ò–ò –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö"
        )
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(custom_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 6: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    print("üí° –¢–µ—Å—Ç 6: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")
    try:
        suggestions = await editor.suggest_improvements(original_post)
        print("‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:")
        print(suggestions)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 7: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏
    print("üöÄ –¢–µ—Å—Ç 7: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏")
    try:
        optimized_post = await editor.optimize_for_engagement(original_post)
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(optimized_post)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_keyboard_functions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    from telegram_bot import create_approval_keyboard, create_quick_edit_keyboard
    
    print("‚å®Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä")
    
    test_post_id = "test123"
    
    # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    approval_kb = create_approval_keyboard(test_post_id)
    print(f"‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞: {len(approval_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    
    # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    quick_edit_kb = create_quick_edit_keyboard(test_post_id)
    print(f"‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞: {len(quick_edit_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ callback_data
    for row in approval_kb.inline_keyboard:
        for button in row:
            print(f"  - –ö–Ω–æ–ø–∫–∞: {button.text} -> {button.callback_data}")
    
    print()
    for row in quick_edit_kb.inline_keyboard:
        for button in row:
            print(f"  - –ö–Ω–æ–ø–∫–∞: {button.text} -> {button.callback_data}")

async def test_error_handling():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("üõ† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫")
    
    # –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º API –∫–ª—é—á–æ–º
    try:
        editor = PostEditor(api_key="invalid_key")
        await editor.edit_post("test", "test")
    except Exception as e:
        print(f"‚úÖ –û—à–∏–±–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: {type(e).__name__}")
    
    # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    api_key = os.getenv('OPENAI_API_KEY')
    if api_key:
        try:
            editor = PostEditor(api_key=api_key)
            await editor.edit_post("", "")
        except Exception as e:
            print(f"‚úÖ –û—à–∏–±–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: {type(e).__name__}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n")
    
    # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π)
    test_keyboard_functions()
    print()
    
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    asyncio.run(test_post_editor())
    print()
    asyncio.run(test_error_handling())
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

if __name__ == "__main__":
    main()